{"remainingRequest":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/src/views/3. user views/components/calendars/WeeklyViewCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/src/views/3. user views/components/calendars/WeeklyViewCalendar.vue","mtime":1562358994137},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport * as api from '@/services/api_access';\n\nexport default {\n    data() {\n        return {\n            //Week for the calendar\n            week: [],\n\n            //locations include: id, name, type\n            locations: this.$parent.locations,\n\n            //List of returned bookings\n            bookings: [],\n            //Interval to check the server for bookings\n            checkBookingsTimeout: null,\n            bookingDelays: 0,\n        }\n    },\n\n    methods: {\n        /* Date Functions */\n        getWeek(day) {\n            this.week[0] = new Date(day.setDate(day.getDate() - (day.getDay())));\n            this.week[0].setHours(0, 0, 0, 0);\n            var previous = new Date(this.week[0]);\n            for (var i = 1; i < 7; i++) {\n                this.week[i] = new Date(previous.setDate(this.week[i-1].getDate() + 1));\n                this.week[i].setHours(0, 0, 0, 0);\n                previous = new Date(this.week[i]);\n            }\n        },\n        decWeek: function() {\n            this.getWeek(new Date(this.week[0].setDate(this.week[0].getDate() - 1)));\n            this.checkBookings();\n        },\n        incWeek: function() {\n            this.getWeek(new Date(this.week[this.week.length-1].setDate(this.week[this.week.length-1].getDate() + 1)));\n            this.checkBookings();\n        },\n\n        /* JavaScript Styling */\n        styleDeskElements(location) {\n            if (location.type == 'room') {\n                for (var i = 0; i < this.locations.length; i++) {\n                    if (this.locations[i] == location && i+1 < this.locations.length && this.locations[i+1].type == 'desk')\n                        return 'margin-bottom: 20px;';\n                }\n            }\n            else if (location.type == 'desk')\n                return 'height: 26px;';\n        },\n        styleCurrentDay(day) {\n            if (new Date().toJSON().slice(0, 10) == day.toJSON().slice(0, 10))\n                return 'background-color: Gainsboro;';\n            else    //Done to reset yestday on DOM lifecycle refresh\n                return 'background-color: white;';\n        },\n        getDayOfTheWeek(day) {\n            switch(day.getDay()) {\n                case 0: return 'Sunday';\n                case 1: return 'Monday';\n                case 2: return 'Tuesday';\n                case 3: return 'Wednesday';\n                case 4: return 'Thursday';\n                case 5: return 'Friday';\n                case 6: return 'Saturday';\n            }\n        },\n        sortBookingsFor(date, location) {\n            var matchedBookings = [];\n            //sort though all bookings and return the first 3 that are within the right block and not a desk\n            for (var i = 0; i < this.bookings.length; i++) {\n                if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID && location.type == 'room')\n                    matchedBookings[matchedBookings.length] = this.bookings[i];\n            }\n            matchedBookings.sort(function(booking1, booking2) {\n                booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n                booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1];\n                //console.log(booking1 + '  ' + booking2);\n                return booking1 - booking2;\n            });\n            if (matchedBookings.length > 3) \n                matchedBookings = [matchedBookings[0], matchedBookings[1], matchedBookings[2]];\n            return matchedBookings;\n        },\n        getBookingCount(date, location) {\n            var count = 0;\n            for (var i = 0; i < this.bookings.length; i++) {\n                if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID)\n                    count++;\n            }\n            return count;\n        },\n        styleBookingCount(date, location) {\n            var count = 0;\n            for (var i = 0; i < this.bookings.length; i++) {\n                if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID)\n                    count++;\n            }\n            if (count == 0)\n                return 'visibility: hidden;';\n        },\n        fillBookingStartTime(booking) {\n            if (booking.startTime.split(':')[0] < 12)\n                return parseInt(booking.startTime.split(':')[0]) + ':' + booking.startTime.split(':')[1] + ' am';\n            else if (booking.startTime.split(':')[0] == 12)\n                return booking.startTime + ' pm';\n            else\n                return booking.startTime.split(':')[0] - 12 + ':' + booking.startTime.split(':')[1] + ' pm';\n        },\n        styleIcon(booking) {\n            var volumeOn = require('../../../../assets/volumeOn-black.png');\n            var volumeOff = require('../../../../assets/volumeOff-black.png');\n            if (booking.noiseLevel > 0)\n                return 'background-image: url('+volumeOn+');';\n            else if (booking.noiseLevel < 0)\n                return 'background-image: url('+volumeOff+');';\n        },\n        styleBookingText(booking) {\n            if (booking.noiseLevel != 0)\n                return 'width: calc(98% - 90px);';\n        },\n\n        /* Data Update */\n        checkBookingsLoop() {\n            var THIS = this;\n            this.checkBookingsTimeout = setTimeout(function() {\n                THIS.bookingsDelay = 5000;\n                var startDate = THIS.week[0].toJSON().slice(0, 10);\n                var endDate = THIS.week[THIS.week.length-1].toJSON().slice(0, 10);\n                var refDate = THIS.week[0];\n                api.getBookingsDate(startDate, endDate).then(bookingsResult => {\n                    if (refDate != THIS.week[0])\n                        return;\n                    THIS.bookings = bookingsResult;\n                    THIS.checkBookingsLoop();\n                });\n            }, this.bookingsDelay)\n        },\n        checkBookings() {\n            this.bookings = [];\n            clearTimeout(this.checkBookingsTimeout);\n            this.bookingsDelay = 0;\n            this.checkBookingsLoop();\n        },\n\n        /* User Actions */\n        handlePageScroll() {\n            //Top Row Sticky Movment\n            var originalTop = document.getElementById('calendar').getBoundingClientRect().top + window.scrollY;\n            if (window.scrollY >= originalTop)\n                document.getElementById('topRow').style.top = window.scrollY - originalTop + 'px';\n            else\n                document.getElementById('topRow').style.top = '0px';\n        },\n        handleInnerSectionScroll() {\n            //Make sure calender y cant be changed\n            document.getElementById('innerSection').scrollTop = 0;\n        },\n\n        addBookingClicked(date, location) {\n            this.$parent.closeModals();\n            this.$parent.$refs.BookingModal.openModal(date, location, '12:00', '12:00');\n        },\n\n        viewBookings(date, location) {\n            var matchedBookings = [];\n            //sort though all bookings and return the first 3 that are within the right day\n            for (var i = 0; i < this.bookings.length; i++) {\n                if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID)\n                    matchedBookings[matchedBookings.length] = this.bookings[i];\n            }\n            matchedBookings.sort(function(booking1, booking2) {\n                booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n                booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1];\n                //console.log(booking1 + '  ' + booking2);\n                return booking1 - booking2;\n            });\n            this.$parent.closeModals();\n            this.$parent.$refs.BookedDayModal.openModal(matchedBookings);\n        }\n    },\n    \n    beforeMount() {\n        //console.log('beforeMount');\n        this.getWeek(new Date());\n    },\n    mounted() {\n        //console.log('mounted');\n        //Start check booking loop\n        this.checkBookingsLoop();\n        //Start page scroll listener\n        window.addEventListener('scroll', this.handlePageScroll);\n    },\n    beforeDestroy() {\n        //console.log('beforeDestroy');\n        //End check booking loop\n        clearTimeout(this.checkBookingsTimeout);\n        //End page scroll listener\n        window.removeEventListener('scroll', this.handlePageScroll);\n    }\n}\n",{"version":3,"sources":["WeeklyViewCalendar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WeeklyViewCalendar.vue","sourceRoot":"src/views/3. user views/components/calendars","sourcesContent":["<template>\n    <div class=\"WeeklyViewCalendar\"> \n\n        <!-- Container for date selector -->\n        <div class=\"dateSelector\">\n            <button id=\"dateSelectorPreviousBtn\" class=\"btn backBtn\" type=\"button\" @click=\"decWeek()\"></button>\n            <input id=\"dateSelectorDate\" class=\"date\" :value=\"week[0].getMonth()+1+'/'+week[0].getDate()+'/'+week[0].getFullYear()\" disabled>\n            <div class=\"hyphen\">-</div>\n            <input id=\"dateSelectorDate\" class=\"date\" :value=\"week[6].getMonth()+1+'/'+week[6].getDate()+'/'+week[6].getFullYear()\" disabled>\n            <!--button id=\"dateSelectorCalendar\" class=\"btn calendarBtn\" type=\"button\"></button-->\n            <button id=\"dateSelectorPreviousBtn\" class=\"btn forwardBtn\" type=\"button\" @click=\"incWeek()\"></button>\n        </div>\n\n        <!-- Calendar -->\n        <div class=\"calendar\" id='calendar'>\n\n            <!-- Locations -->\n            <div class=\"locationCol\">\n                <div class=\"firstLocationPlaceHolder\"></div>\n                <div class=\"locationContainer\" v-for=\"location in locations\" :key=\"'location'+location.id\" :id=\"'location'+location.id\" :style='styleDeskElements(location)'>\n                    <div class=\"location\">\n                        <div class=\"text\">{{location.name}}</div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Inner Scrollable Section -->\n            <div class=\"innerSection\" id='innerSection' @scroll='handleInnerSectionScroll()'>\n                \n                <!-- Days -->\n                <div class=\"topRow\" id='topRow'>\n                    <div class=\"dayContainer\" v-for=\"(day, index) in week\" :key=\"'day'+index\">\n                        <div class=\"day\">\n                            <div class=\"date\">{{day.getMonth()+1 + ' / ' + day.getDate()}}</div>\n                            <div class=\"dayOfTheWeek\">{{getDayOfTheWeek(day)}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Calendar Rows -->\n                <div class=\"firstRowPlaceHolder\"></div>\n                <div class=\"calendarRow\" v-for=\"location in locations\" :key=\"'loc'+location.id\" :style='styleDeskElements(location)'>\n                    <!-- Calendar Blocks -->\n                    <div class=\"block\" v-for=\"(day, index) in week\" :key=\"'block'+location.id+':'+index\" :style='styleCurrentDay(day)'>\n                        \n                        <!-- Buttons -->\n                        <div class=\"searchIcon\" :style='styleBookingCount(day, location)' @click='viewBookings(day, location)'></div>\n                        <div class=\"searchText\" :style='styleBookingCount(day, location)' @click='viewBookings(day, location)'>\n                            {{getBookingCount(day, location) + ' total'}}\n                        </div>\n                        <button class=\"addBtn\" @click=\"addBookingClicked(day, location)\"></button>\n                        \n                        <!-- Bookings -->\n                        <div class=\"booking\" v-for=\"booking in sortBookingsFor(day, location)\" :key=\"'booking'+booking.id\" @click='viewBookings(day, location)'>\n                            <div class=\"timeBox\" :style='\"background-color:\"+booking.bookingColor'>\n                                <div class=\"time\">{{fillBookingStartTime(booking)}}</div>\n                            </div>\n                            <div v-if='booking.noiseLevel != 0' class=\"icon\" :style='styleIcon(booking)'></div>\n                            <div class=\"textBox\" :style='styleBookingText(booking)'>\n                                <div class=\"text\">{{booking.title}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<style scoped lang=\"scss\">\n    //Personal CSS\n    @import \"./css/WeeklyViewCalendar.css\";\n</style>\n\n<script>\n    import * as api from '@/services/api_access';\n\n    export default {\n        data() {\n            return {\n                //Week for the calendar\n                week: [],\n\n                //locations include: id, name, type\n                locations: this.$parent.locations,\n\n                //List of returned bookings\n                bookings: [],\n                //Interval to check the server for bookings\n                checkBookingsTimeout: null,\n                bookingDelays: 0,\n            }\n        },\n\n        methods: {\n            /* Date Functions */\n            getWeek(day) {\n                this.week[0] = new Date(day.setDate(day.getDate() - (day.getDay())));\n                this.week[0].setHours(0, 0, 0, 0);\n                var previous = new Date(this.week[0]);\n                for (var i = 1; i < 7; i++) {\n                    this.week[i] = new Date(previous.setDate(this.week[i-1].getDate() + 1));\n                    this.week[i].setHours(0, 0, 0, 0);\n                    previous = new Date(this.week[i]);\n                }\n            },\n            decWeek: function() {\n                this.getWeek(new Date(this.week[0].setDate(this.week[0].getDate() - 1)));\n                this.checkBookings();\n            },\n            incWeek: function() {\n                this.getWeek(new Date(this.week[this.week.length-1].setDate(this.week[this.week.length-1].getDate() + 1)));\n                this.checkBookings();\n            },\n\n            /* JavaScript Styling */\n            styleDeskElements(location) {\n                if (location.type == 'room') {\n                    for (var i = 0; i < this.locations.length; i++) {\n                        if (this.locations[i] == location && i+1 < this.locations.length && this.locations[i+1].type == 'desk')\n                            return 'margin-bottom: 20px;';\n                    }\n                }\n                else if (location.type == 'desk')\n                    return 'height: 26px;';\n            },\n            styleCurrentDay(day) {\n                if (new Date().toJSON().slice(0, 10) == day.toJSON().slice(0, 10))\n                    return 'background-color: Gainsboro;';\n                else    //Done to reset yestday on DOM lifecycle refresh\n                    return 'background-color: white;';\n            },\n            getDayOfTheWeek(day) {\n                switch(day.getDay()) {\n                    case 0: return 'Sunday';\n                    case 1: return 'Monday';\n                    case 2: return 'Tuesday';\n                    case 3: return 'Wednesday';\n                    case 4: return 'Thursday';\n                    case 5: return 'Friday';\n                    case 6: return 'Saturday';\n                }\n            },\n            sortBookingsFor(date, location) {\n                var matchedBookings = [];\n                //sort though all bookings and return the first 3 that are within the right block and not a desk\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID && location.type == 'room')\n                        matchedBookings[matchedBookings.length] = this.bookings[i];\n                }\n                matchedBookings.sort(function(booking1, booking2) {\n                    booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n                    booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1];\n                    //console.log(booking1 + '  ' + booking2);\n                    return booking1 - booking2;\n                });\n                if (matchedBookings.length > 3) \n                    matchedBookings = [matchedBookings[0], matchedBookings[1], matchedBookings[2]];\n                return matchedBookings;\n            },\n            getBookingCount(date, location) {\n                var count = 0;\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID)\n                        count++;\n                }\n                return count;\n            },\n            styleBookingCount(date, location) {\n                var count = 0;\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID)\n                        count++;\n                }\n                if (count == 0)\n                    return 'visibility: hidden;';\n            },\n            fillBookingStartTime(booking) {\n                if (booking.startTime.split(':')[0] < 12)\n                    return parseInt(booking.startTime.split(':')[0]) + ':' + booking.startTime.split(':')[1] + ' am';\n                else if (booking.startTime.split(':')[0] == 12)\n                    return booking.startTime + ' pm';\n                else\n                    return booking.startTime.split(':')[0] - 12 + ':' + booking.startTime.split(':')[1] + ' pm';\n            },\n            styleIcon(booking) {\n                var volumeOn = require('../../../../assets/volumeOn-black.png');\n                var volumeOff = require('../../../../assets/volumeOff-black.png');\n                if (booking.noiseLevel > 0)\n                    return 'background-image: url('+volumeOn+');';\n                else if (booking.noiseLevel < 0)\n                    return 'background-image: url('+volumeOff+');';\n            },\n            styleBookingText(booking) {\n                if (booking.noiseLevel != 0)\n                    return 'width: calc(98% - 90px);';\n            },\n\n            /* Data Update */\n            checkBookingsLoop() {\n                var THIS = this;\n                this.checkBookingsTimeout = setTimeout(function() {\n                    THIS.bookingsDelay = 5000;\n                    var startDate = THIS.week[0].toJSON().slice(0, 10);\n                    var endDate = THIS.week[THIS.week.length-1].toJSON().slice(0, 10);\n                    var refDate = THIS.week[0];\n                    api.getBookingsDate(startDate, endDate).then(bookingsResult => {\n                        if (refDate != THIS.week[0])\n                            return;\n                        THIS.bookings = bookingsResult;\n                        THIS.checkBookingsLoop();\n                    });\n                }, this.bookingsDelay)\n            },\n            checkBookings() {\n                this.bookings = [];\n                clearTimeout(this.checkBookingsTimeout);\n                this.bookingsDelay = 0;\n                this.checkBookingsLoop();\n            },\n\n            /* User Actions */\n            handlePageScroll() {\n                //Top Row Sticky Movment\n                var originalTop = document.getElementById('calendar').getBoundingClientRect().top + window.scrollY;\n                if (window.scrollY >= originalTop)\n                    document.getElementById('topRow').style.top = window.scrollY - originalTop + 'px';\n                else\n                    document.getElementById('topRow').style.top = '0px';\n            },\n            handleInnerSectionScroll() {\n                //Make sure calender y cant be changed\n                document.getElementById('innerSection').scrollTop = 0;\n            },\n\n            addBookingClicked(date, location) {\n                this.$parent.closeModals();\n                this.$parent.$refs.BookingModal.openModal(date, location, '12:00', '12:00');\n            },\n\n            viewBookings(date, location) {\n                var matchedBookings = [];\n                //sort though all bookings and return the first 3 that are within the right day\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10) && location.id == this.bookings[i].locationID)\n                        matchedBookings[matchedBookings.length] = this.bookings[i];\n                }\n                matchedBookings.sort(function(booking1, booking2) {\n                    booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n                    booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1];\n                    //console.log(booking1 + '  ' + booking2);\n                    return booking1 - booking2;\n                });\n                this.$parent.closeModals();\n                this.$parent.$refs.BookedDayModal.openModal(matchedBookings);\n            }\n        },\n        \n        beforeMount() {\n            //console.log('beforeMount');\n            this.getWeek(new Date());\n        },\n        mounted() {\n            //console.log('mounted');\n            //Start check booking loop\n            this.checkBookingsLoop();\n            //Start page scroll listener\n            window.addEventListener('scroll', this.handlePageScroll);\n        },\n        beforeDestroy() {\n            //console.log('beforeDestroy');\n            //End check booking loop\n            clearTimeout(this.checkBookingsTimeout);\n            //End page scroll listener\n            window.removeEventListener('scroll', this.handlePageScroll);\n        }\n    }\n</script>\n"]}]}