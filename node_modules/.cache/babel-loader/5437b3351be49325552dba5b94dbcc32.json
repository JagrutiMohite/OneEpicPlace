{"remainingRequest":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/babel-loader/lib/index.js!/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/src/views/3. user views/components/calendars/MonthlyViewCalendar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/src/views/3. user views/components/calendars/MonthlyViewCalendar.vue","mtime":1562358994137},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _parseInt from \"/Users/jagrutimohite/Documents/web page internship/OneEpicPlace-WebsiteSchedulingExtension/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as api from '@/services/api_access';\nexport default {\n  data: function data() {\n    return {\n      //days for the calendar\n      firstDay: null,\n      days: [],\n      //locations include: id, name, type\n      locations: this.$parent.locations,\n      //List of returned bookings\n      bookings: [],\n      //Interval to check the server for bookings\n      checkBookingsTimeout: null,\n      bookingDelays: 0\n    };\n  },\n  methods: {\n    /* Date Functions */\n    getMonth: function getMonth(day) {\n      //Get first day of the month for date selector\n      this.firstDay = new Date(day.setDate(1)); //Reset days\n\n      this.days = []; //Get days before, during, and after the month\n\n      var startOfTheMonth = new Date(day.setDate(1));\n      var startOfTheMonth_day = startOfTheMonth.getDay();\n      var startOfDays = new Date(day.setDate(startOfTheMonth.getDate() - startOfTheMonth_day));\n\n      for (var index = 0; index < 42; index++) {\n        var temp = new Date(day);\n        temp = new Date(temp.setDate(startOfDays.getDate() + index));\n        temp.setHours(0, 0, 0, 0);\n        this.days[this.days.length] = temp;\n      }\n      /*\n      for (var i = 0; i < this.days.length; i++) {\n          console.log(i + ' / ' + this.days[i]);\n      }\n      */\n\n    },\n    decMonth: function decMonth() {\n      this.getMonth(new Date(this.days[0].setDate(this.days[0].getDate() - 1)));\n      this.checkBookings();\n    },\n    incMonth: function incMonth() {\n      this.getMonth(new Date(this.days[this.days.length - 1].setDate(this.days[this.days.length - 1].getDate() + 1)));\n      this.checkBookings();\n    },\n    getDayOfTheWeek: function getDayOfTheWeek(index) {\n      switch (index) {\n        case 1:\n          return 'Sunday';\n\n        case 2:\n          return 'Monday';\n\n        case 3:\n          return 'Tuesday';\n\n        case 4:\n          return 'Wednesday';\n\n        case 5:\n          return 'Thursday';\n\n        case 6:\n          return 'Friday';\n\n        case 7:\n          return 'Saturday';\n      }\n    },\n    getMonthName: function getMonthName(day) {\n      switch (day.getMonth()) {\n        case 0:\n          return 'January';\n\n        case 1:\n          return 'February';\n\n        case 2:\n          return 'March';\n\n        case 3:\n          return 'April';\n\n        case 4:\n          return 'May';\n\n        case 5:\n          return 'June';\n\n        case 6:\n          return 'July';\n\n        case 7:\n          return 'August';\n\n        case 8:\n          return 'September';\n\n        case 9:\n          return 'October';\n\n        case 10:\n          return 'November';\n\n        case 11:\n          return 'December';\n      }\n    },\n\n    /* JavaScript Styling */\n    styleCurrentDay: function styleCurrentDay(week, day) {\n      var date = this.days[7 * (week - 1) + day - 1];\n      if (date.getDate() == new Date().getDate() && date.getMonth() == new Date().getMonth()) return 'background-color: Gainsboro;';else //Done to reset yestday on DOM lifecycle refresh\n        return 'background-color: white;';\n    },\n    sortBookingsFor: function sortBookingsFor(week, day) {\n      var date = this.days[7 * (week - 1) + day - 1];\n      var matchedBookings = []; //sort though all bookings and return the first 3 that are within the right block and not a desk\n\n      for (var i = 0; i < this.bookings.length; i++) {\n        if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10)) matchedBookings[matchedBookings.length] = this.bookings[i];\n      }\n\n      matchedBookings.sort(function (booking1, booking2) {\n        booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n        booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1]; //console.log(booking1 + '  ' + booking2);\n\n        return booking1 - booking2;\n      });\n      if (matchedBookings.length > 3) matchedBookings = [matchedBookings[0], matchedBookings[1], matchedBookings[2]];\n      return matchedBookings;\n    },\n    fillBookingStartTime: function fillBookingStartTime(booking) {\n      if (booking.startTime.split(':')[0] < 12) return _parseInt(booking.startTime.split(':')[0]) + ':' + booking.startTime.split(':')[1] + ' am';else if (booking.startTime.split(':')[0] == 12) return booking.startTime + ' pm';else return booking.startTime.split(':')[0] - 12 + ':' + booking.startTime.split(':')[1] + ' pm';\n    },\n    styleIcon: function styleIcon(booking) {\n      var volumeOn = require('../../../../assets/volumeOn-black.png');\n\n      var volumeOff = require('../../../../assets/volumeOff-black.png');\n\n      if (booking.noiseLevel > 0) return 'background-image: url(' + volumeOn + ');';else if (booking.noiseLevel < 0) return 'background-image: url(' + volumeOff + ');';\n    },\n    styleBookingText: function styleBookingText(booking) {\n      if (booking.noiseLevel != 0) return 'width: 56%;';\n    },\n    getBookingCount: function getBookingCount(week, day) {\n      var date = this.days[7 * (week - 1) + day - 1];\n      var count = 0;\n\n      for (var i = 0; i < this.bookings.length; i++) {\n        if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10)) count++;\n      }\n\n      return count;\n    },\n    styleBookingCount: function styleBookingCount(week, day) {\n      var date = this.days[7 * (week - 1) + day - 1];\n      var count = 0;\n\n      for (var i = 0; i < this.bookings.length; i++) {\n        if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10)) count++;\n      }\n\n      if (count == 0) return 'visibility: hidden;';\n    },\n    styleDate: function styleDate(week, day) {\n      var date = this.days[7 * (week - 1) + day - 1];\n      if (date.getMonth() != this.firstDay.getMonth()) return 'color: LightGray;';\n    },\n\n    /* Data Update */\n    checkBookingsLoop: function checkBookingsLoop() {\n      var THIS = this;\n      this.checkBookingsTimeout = setTimeout(function () {\n        THIS.bookingsDelay = 5000;\n        var startDate = THIS.days[0].toJSON().slice(0, 10);\n        var endDate = THIS.days[THIS.days.length - 1].toJSON().slice(0, 10);\n        var refDate = THIS.days[0];\n        api.getBookingsDate(startDate, endDate).then(function (bookingsResult) {\n          if (refDate != THIS.days[0]) return;\n          THIS.bookings = bookingsResult;\n          THIS.checkBookingsLoop();\n        });\n      }, this.bookingsDelay);\n    },\n    checkBookings: function checkBookings() {\n      this.bookings = [];\n      clearTimeout(this.checkBookingsTimeout);\n      this.bookingsDelay = 0;\n      this.checkBookingsLoop();\n    },\n\n    /* User Actions */\n    handlePageScroll: function handlePageScroll() {\n      //Top Row Sticky Movment\n      var originalTop = document.getElementById('calendar').getBoundingClientRect().top + window.scrollY;\n      if (window.scrollY >= originalTop) document.getElementById('topRow').style.top = window.scrollY - originalTop + 'px';else document.getElementById('topRow').style.top = '0px';\n    },\n    handleInnerSectionScroll: function handleInnerSectionScroll() {\n      //Make sure calender y cant be changed\n      document.getElementById('innerSection').scrollTop = 0;\n    },\n    addBookingClicked: function addBookingClicked(week, day) {\n      this.$parent.closeModals();\n      this.$parent.$refs.BookingModal.openModal(this.days[7 * (week - 1) + day - 1], this.locations[0], '12:00', '12:00');\n    },\n    viewBookings: function viewBookings(week, day) {\n      var date = this.days[7 * (week - 1) + day - 1];\n      var matchedBookings = []; //sort though all bookings and open a modal with the bookings for the right day sorted by time\n\n      for (var i = 0; i < this.bookings.length; i++) {\n        if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10)) matchedBookings[matchedBookings.length] = this.bookings[i];\n      }\n\n      matchedBookings.sort(function (booking1, booking2) {\n        booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n        booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1]; //console.log(booking1 + '  ' + booking2);\n\n        return booking1 - booking2;\n      });\n      this.$parent.closeModals();\n      this.$parent.$refs.BookedDayModal.openModal(matchedBookings);\n    }\n  },\n  beforeMount: function beforeMount() {\n    //console.log('beforeMount');\n    this.getMonth(new Date());\n  },\n  mounted: function mounted() {\n    //console.log('mounted');\n    //Start check booking loop\n    this.checkBookingsLoop(); //Start page scroll listener\n\n    window.addEventListener('scroll', this.handlePageScroll);\n  },\n  beforeDestroy: function beforeDestroy() {\n    //console.log('beforeDestroy');\n    //End check booking loop\n    clearTimeout(this.checkBookingsTimeout); //End page scroll listener\n\n    window.removeEventListener('scroll', this.handlePageScroll);\n  }\n};",{"version":3,"sources":["MonthlyViewCalendar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"MonthlyViewCalendar\"> \n\n        <!-- Container for date selector -->\n        <div class=\"dateSelector\">\n            <button id=\"dateSelectorPreviousBtn\" class=\"btn backBtn\" type=\"button\" @click=\"decMonth()\"></button>\n            <input id=\"dateSelectorDate\" class=\"date\" :value=\"getMonthName(firstDay) + ' ' + firstDay.getFullYear()\" disabled>\n            <button id=\"dateSelectorCalendar\" class=\"btn calendarBtn\" type=\"button\"></button>\n            <button id=\"dateSelectorPreviousBtn\" class=\"btn forwardBtn\" type=\"button\" @click=\"incMonth()\"></button>\n        </div>\n\n        <!-- Calendar -->\n        <div class=\"calendar\" id='calendar'>\n\n            <!-- Inner Scrollable Section -->\n            <div class=\"innerSection\" id='innerSection' @scroll='handleInnerSectionScroll()'>\n\n                <!-- Days -->\n                <div class=\"topRow\" id='topRow'>\n                    <div class=\"dayContainer\" v-for=\"index in 7\" :key=\"'day'+index\">\n                        <div class=\"day\">\n                            <div class=\"dayOfTheWeek\">{{getDayOfTheWeek(index)}}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Calendar Rows -->\n                <div class=\"firstRowPlaceHolder\"></div>\n                <div class=\"calendarRow\" v-for=\"week in 6\" :key=\"'week'+week\">\n                    <!-- Calendar Blocks -->\n                    <div class=\"block\" v-for=\"day in 7\" :key=\"'block'+week+':'+day\" :style='styleCurrentDay(week, day)'>\n                        <!-- Display -->\n                        <div class=\"date\" :style=\"styleDate(week, day)\">{{days[(7*(week-1) + day) - 1].getDate()}}</div>\n                        <div class=\"searchBar\">\n                            <div class=\"searchIcon\" :style='styleBookingCount(week, day)' @click='viewBookings(week, day)'></div>\n                            <div class=\"searchText\" :style='styleBookingCount(week, day)' @click='viewBookings(week, day)'>\n                                {{getBookingCount(week, day) + ' total'}}\n                            </div>\n                        </div>\n                        <button class=\"addBtn\" @click=\"addBookingClicked(week, day)\"></button>\n\n                        <!-- Bookings -->\n                        <div class=\"booking\" v-for=\"booking in sortBookingsFor(week, day)\" :key=\"'booking'+booking.id\" @click='viewBookings(week, day)'>\n                            <div class=\"timeBox\" :style='\"background-color:\"+booking.bookingColor'>\n                                <div class=\"time\">{{fillBookingStartTime(booking)}}</div>\n                            </div>\n                            <div v-if=\"booking.noiseLevel != 0\" class=\"icon\" :style='styleIcon(booking)'></div>\n                            <div class=\"textBox\" :style='styleBookingText(booking)'>\n                                <div class=\"text\">{{booking.title}}</div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n        \n</template>\n\n<style scoped lang=\"scss\">\n    //Personal CSS\n    @import \"./css/MonthlyViewCalendar.css\";\n</style>\n\n<script>\n    import * as api from '@/services/api_access';\n\n    export default {\n        data() {\n            return {\n                //days for the calendar\n                firstDay: null,\n                days: [],\n\n                //locations include: id, name, type\n                locations: this.$parent.locations,\n\n                //List of returned bookings\n                bookings: [],\n                //Interval to check the server for bookings\n                checkBookingsTimeout: null,\n                bookingDelays: 0,\n            }\n        },\n\n        methods: {\n            /* Date Functions */\n            getMonth(day) {\n                //Get first day of the month for date selector\n                this.firstDay = new Date(day.setDate(1));\n\n                //Reset days\n                this.days = [];\n                \n                //Get days before, during, and after the month\n                var startOfTheMonth = new Date(day.setDate(1));\n                var startOfTheMonth_day = startOfTheMonth.getDay();\n                var startOfDays = new Date(day.setDate(startOfTheMonth.getDate() - startOfTheMonth_day));\n                for (var index = 0; index < 42; index++) {\n                    var temp = new Date(day);\n                    temp = new Date(temp.setDate(startOfDays.getDate() + index));\n                    temp.setHours(0, 0, 0, 0);\n                    this.days[this.days.length] = temp;\n                }\n                /*\n                for (var i = 0; i < this.days.length; i++) {\n                    console.log(i + ' / ' + this.days[i]);\n                }\n                */\n            },\n            decMonth: function() {\n                this.getMonth(new Date(this.days[0].setDate(this.days[0].getDate() - 1)));\n                this.checkBookings();\n            },\n            incMonth: function() {\n                this.getMonth(new Date(this.days[this.days.length-1].setDate(this.days[this.days.length-1].getDate() + 1)));\n                this.checkBookings();\n            },\n\n            getDayOfTheWeek(index) {\n                switch(index) {\n                    case 1: return 'Sunday';\n                    case 2: return 'Monday';\n                    case 3: return 'Tuesday';\n                    case 4: return 'Wednesday';\n                    case 5: return 'Thursday';\n                    case 6: return 'Friday';\n                    case 7: return 'Saturday';\n                }\n            },\n            getMonthName(day) {\n                switch(day.getMonth()) {\n                    case 0: return 'January';\n                    case 1: return 'February';\n                    case 2: return 'March';\n                    case 3: return 'April';\n                    case 4: return 'May';\n                    case 5: return 'June';\n                    case 6: return 'July';\n                    case 7: return 'August';\n                    case 8: return 'September';\n                    case 9: return 'October';\n                    case 10: return 'November';\n                    case 11: return 'December';\n                }\n            },\n\n            /* JavaScript Styling */\n            styleCurrentDay(week, day) {\n                var date = this.days[(7*(week-1) + day) - 1];\n                if (date.getDate() == new Date().getDate() && date.getMonth() == new Date().getMonth())\n                    return 'background-color: Gainsboro;';\n                else    //Done to reset yestday on DOM lifecycle refresh\n                    return 'background-color: white;';\n            },\n            sortBookingsFor(week, day) {\n                var date = this.days[(7*(week-1) + day) - 1];\n                var matchedBookings = [];\n                //sort though all bookings and return the first 3 that are within the right block and not a desk\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10))\n                        matchedBookings[matchedBookings.length] = this.bookings[i];\n                }\n                matchedBookings.sort(function(booking1, booking2) {\n                    booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n                    booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1];\n                    //console.log(booking1 + '  ' + booking2);\n                    return booking1 - booking2;\n                });\n                if (matchedBookings.length > 3) \n                    matchedBookings = [matchedBookings[0], matchedBookings[1], matchedBookings[2]];\n                return matchedBookings;\n            },\n            fillBookingStartTime(booking) {\n                if (booking.startTime.split(':')[0] < 12)\n                    return parseInt(booking.startTime.split(':')[0]) + ':' + booking.startTime.split(':')[1] + ' am';\n                else if (booking.startTime.split(':')[0] == 12)\n                    return booking.startTime + ' pm';\n                else\n                    return booking.startTime.split(':')[0] - 12 + ':' + booking.startTime.split(':')[1] + ' pm';\n            },\n            styleIcon(booking) {\n                var volumeOn = require('../../../../assets/volumeOn-black.png');\n                var volumeOff = require('../../../../assets/volumeOff-black.png');\n                if (booking.noiseLevel > 0)\n                    return 'background-image: url('+volumeOn+');';\n                else if (booking.noiseLevel < 0)\n                    return 'background-image: url('+volumeOff+');';\n            },\n            styleBookingText(booking) {\n                if (booking.noiseLevel != 0)\n                    return 'width: 56%;';\n            },\n            getBookingCount(week, day) {\n                var date = this.days[(7*(week-1) + day) - 1];\n                var count = 0;\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10))\n                        count++;\n                }\n                return count;\n            },\n            styleBookingCount(week, day) {\n                var date = this.days[(7*(week-1) + day) - 1];\n                var count = 0;\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10))\n                        count++;\n                }\n                if (count == 0)\n                    return 'visibility: hidden;';\n            },\n            styleDate(week, day) {\n                var date = this.days[(7*(week-1) + day) - 1];\n                if (date.getMonth() != this.firstDay.getMonth())\n                    return 'color: LightGray;';\n            },\n\n            /* Data Update */\n            checkBookingsLoop() {\n                var THIS = this;\n                this.checkBookingsTimeout = setTimeout(function() {\n                    THIS.bookingsDelay = 5000;\n                    var startDate = THIS.days[0].toJSON().slice(0, 10);\n                    var endDate = THIS.days[THIS.days.length-1].toJSON().slice(0, 10);\n                    var refDate = THIS.days[0];\n                    api.getBookingsDate(startDate, endDate).then(bookingsResult => {\n                        if (refDate != THIS.days[0])\n                            return;\n                        THIS.bookings = bookingsResult;\n                        THIS.checkBookingsLoop();\n                    });\n                }, this.bookingsDelay)\n            },\n            checkBookings() {\n                this.bookings = [];\n                clearTimeout(this.checkBookingsTimeout);\n                this.bookingsDelay = 0;\n                this.checkBookingsLoop();\n            },\n\n            /* User Actions */\n            handlePageScroll() {\n                //Top Row Sticky Movment\n                var originalTop = document.getElementById('calendar').getBoundingClientRect().top + window.scrollY;\n                if (window.scrollY >= originalTop)\n                    document.getElementById('topRow').style.top = window.scrollY - originalTop + 'px';\n                else\n                    document.getElementById('topRow').style.top = '0px';\n            },\n            handleInnerSectionScroll() {\n                //Make sure calender y cant be changed\n                document.getElementById('innerSection').scrollTop = 0;\n            },\n\n            addBookingClicked(week, day) {\n                this.$parent.closeModals();\n                this.$parent.$refs.BookingModal.openModal(this.days[(7*(week-1) + day) - 1], this.locations[0], '12:00', '12:00');\n            },\n\n            viewBookings(week, day) {\n                var date = this.days[(7*(week-1) + day) - 1];\n                var matchedBookings = [];\n                //sort though all bookings and open a modal with the bookings for the right day sorted by time\n                for (var i = 0; i < this.bookings.length; i++) {\n                    if (date.toJSON().slice(0, 10) == this.bookings[i].date.slice(0, 10))\n                        matchedBookings[matchedBookings.length] = this.bookings[i];\n                }\n                matchedBookings.sort(function(booking1, booking2) {\n                    booking1 = booking1.startTime.split(':')[0] + booking1.startTime.split(':')[1];\n                    booking2 = booking2.startTime.split(':')[0] + booking2.startTime.split(':')[1];\n                    //console.log(booking1 + '  ' + booking2);\n                    return booking1 - booking2;\n                });\n                this.$parent.closeModals();\n                this.$parent.$refs.BookedDayModal.openModal(matchedBookings);\n            }\n        },\n        \n        beforeMount() {\n            //console.log('beforeMount');\n            this.getMonth(new Date());\n        },\n        mounted() {\n            //console.log('mounted');\n            //Start check booking loop\n            this.checkBookingsLoop();\n            //Start page scroll listener\n            window.addEventListener('scroll', this.handlePageScroll);\n        },\n        beforeDestroy() {\n            //console.log('beforeDestroy');\n            //End check booking loop\n            clearTimeout(this.checkBookingsTimeout);\n            //End page scroll listener\n            window.removeEventListener('scroll', this.handlePageScroll);\n        }\n    }\n</script>\n    "],"sourceRoot":"src/views/3. user views/components/calendars"}]}